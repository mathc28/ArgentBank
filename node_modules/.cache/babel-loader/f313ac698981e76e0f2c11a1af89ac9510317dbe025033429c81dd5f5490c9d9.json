{"ast":null,"code":"var _jsxFileName = \"/Users/mathieucocu/Desktop/formation front end/projet 11/p11- bon argentbank/frontend/src/components/login/index.jsx\",\n  _s = $RefreshSig$();\nimport Icon from './circle-user-solid.svg';\nimport './style.css';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { setUserAuth, setUserInfos, storeToken } from '../../feature/login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const resetForm = () => {\n    setEmail('');\n    setPassword('');\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      console.log(\"Submitting login form...\");\n      const response = await fetch(\"http://localhost:3001/api/v1/user/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        const token = data.body.token;\n        console.log(\"Login successful, received token:\", token);\n        dispatch(storeToken(token));\n\n        // Call API pour obtenir les données du profil de l'utilisateur\n        const profilInfos = await fetch('http://localhost:3001/api/v1/user/profile', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}` // Inclure le token dans les en-têtes\n          }\n        });\n        if (!profilInfos.ok) {\n          throw new Error('Failed to fetch user profile data');\n        }\n        // Extraire les données du profil de la réponse\n        const profilData = await profilInfos.json();\n        console.log(\"User profile data retrieved:\", profilData);\n\n        // Dispatch des informations d'authentification\n        dispatch(setUserAuth({\n          email,\n          token\n        }));\n        console.log(\"Dispatched setUserAuth with:\", {\n          email,\n          token\n        });\n\n        // Dispatch des informations utilisateur (firstName au lieu de userName)\n        dispatch(setUserInfos({\n          email: profilData.body.email,\n          firstName: profilData.body.firstName,\n          // Utilisation du firstName\n          lastName: profilData.body.lastName\n        }));\n        console.log(\"Dispatched setUserInfos with:\", {\n          email: profilData.body.email,\n          firstName: profilData.body.firstName,\n          lastName: profilData.body.lastName\n        });\n        navigate('/user');\n        resetForm();\n      } else {\n        const errorData = await response.json();\n        setError(errorData.message || \"Une erreur est survenue. Veuillez réessayer.\");\n        console.error(\"Login error:\", errorData);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      setError(\"Une erreur réseau est survenue. Veuillez vérifier votre connexion.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"main-login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-in-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Icon,\n        alt: \"user icon\",\n        className: \"usericon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"form-username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"form-username\",\n            type: \"email\",\n            value: email,\n            onChange: event => setEmail(event.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            value: password,\n            onChange: event => setPassword(event.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-remember\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"remember-me\",\n            children: \"Remember me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"remember-me\",\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"sign-in-button\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 7\n  }, this);\n};\n_s(Login, \"AR4NPp2BQevf5Ix3lZW1AAf9OFs=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Icon","React","useState","useDispatch","useNavigate","setUserAuth","setUserInfos","storeToken","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","dispatch","navigate","resetForm","handleSubmit","event","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","ok","data","json","token","profilInfos","Authorization","Error","profilData","firstName","lastName","errorData","message","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/mathieucocu/Desktop/formation front end/projet 11/p11- bon argentbank/frontend/src/components/login/index.jsx"],"sourcesContent":["import Icon from './circle-user-solid.svg';\nimport './style.css';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { setUserAuth, setUserInfos, storeToken } from '../../feature/login';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const resetForm = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      console.log(\"Submitting login form...\");\n      const response = await fetch(\"http://localhost:3001/api/v1/user/login\", {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\",},\n        body: JSON.stringify({ email, password }),\n      });\n      if (response.ok) {\n        const data = await response.json();\n        const token = data.body.token;   \n        console.log(\"Login successful, received token:\", token);\n        dispatch(storeToken(token))\n\n        // Call API pour obtenir les données du profil de l'utilisateur\n        const profilInfos = await fetch('http://localhost:3001/api/v1/user/profile', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`, // Inclure le token dans les en-têtes\n          },\n        });\n    \n        if (!profilInfos.ok) {\n          throw new Error('Failed to fetch user profile data');\n        }\n        // Extraire les données du profil de la réponse\n        const profilData = await profilInfos.json();\n        console.log(\"User profile data retrieved:\", profilData);\n    \n        // Dispatch des informations d'authentification\n        dispatch(setUserAuth({ email, token }));\n        console.log(\"Dispatched setUserAuth with:\", { email, token });\n                \n        // Dispatch des informations utilisateur (firstName au lieu de userName)\n        dispatch(setUserInfos({\n          email: profilData.body.email,\n          firstName: profilData.body.firstName, // Utilisation du firstName\n          lastName: profilData.body.lastName,\n        }));\n        console.log(\"Dispatched setUserInfos with:\", {\n          email: profilData.body.email,\n          firstName: profilData.body.firstName,\n          lastName: profilData.body.lastName,\n        });\n    \n        navigate('/user');\n        resetForm();\n        } else {\n          const errorData = await response.json();\n          setError(errorData.message || \"Une erreur est survenue. Veuillez réessayer.\");\n          console.error(\"Login error:\", errorData);\n        }\n      } \n      catch (error) {\n        console.error(\"Error fetching data:\", error);\n        setError(\"Une erreur réseau est survenue. Veuillez vérifier votre connexion.\");\n      }\n    };\n    \n    return (\n      <section className=\"main-login\">\n        <div className=\"sign-in-content\">\n          <img src={Icon} alt=\"user icon\" className='usericon'/>\n          <h1>Sign In</h1>\n          <form onSubmit={handleSubmit}>\n            <div className=\"input-wrapper\">\n              <label htmlFor=\"form-username\">Username</label>\n              <input id='form-username' \n                type='email' \n                value={email} \n                onChange={(event) => setEmail(event.target.value)} \n                required \n              />\n            </div>\n            <div className=\"input-wrapper\">\n              <label htmlFor=\"password\">Password</label>\n              <input id='password' \n                  type='password' \n                  value={password} \n                  onChange={(event) => setPassword(event.target.value)} \n                  required \n                />\n              </div>\n              <div className=\"input-remember\">      \n                <label htmlFor=\"remember-me\">Remember me</label>\n                <input id='remember-me' \n                  type='checkbox' \n                />\n              </div>\n              <button type=\"submit\" className=\"sign-in-button\">Sign In</button>\n              {error && <p className=\"error-message\">{error}</p>}\n            </form>\n        </div>\n      </section>\n    );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}