{"ast":null,"code":"var _jsxFileName = \"/Users/mathieucocu/Desktop/formation front end/projet 11/ArgentBank-website-main/reactpart/src/components/login/index.jsx\",\n  _s = $RefreshSig$();\nimport Icon from './circle-user-solid.svg';\nimport './style.css';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  // TODO : Faire le fetch pour récupérer le token à la connexion\n  // TODO : Sauvbegarder le token dans redux avec dispatch\n  //fetch('http://locahost:3001/api/v1/user/profile', {\n  //  method: 'GET',\n  //headers: {...}\n\n  //})\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [rememberMe, setRememberMe] = useState(false);\n  const Dispatch = useDispatch();\n  const Navigate = useNavigate();\n  const response = fetch(\"http://localhost:3001/api/v1/user/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  if (response.ok) {\n    const data = response.json();\n    const token = data.body.token;\n    dispatch(token);\n    sessionStorage.setItem(\"token\", token);\n    if (rememberMe) {\n      localStorage.setItem(\"token\", token);\n    }\n    navigate('/user');\n  } else {\n    const error = \"your email or password is invalid\";\n    dispatch(error);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"main-login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-in-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Icon,\n        alt: \"user icon\",\n        className: \"usericon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            type: \"text\",\n            value: email,\n            onChange: event => setEmail(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            value: password,\n            onChange: event => setPassword(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-remember\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"remember-me\",\n            children: \"Remember me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"remember-me\",\n            type: \"checkbox\",\n            value: rememberMe,\n            onChange: event => setRememberMe(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"./user\",\n          className: \"sign-in-button\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"GZsrp2DhT3lNKdJeEPp+bOm6W8Q=\", true, function () {\n  return [useDispatch];\n});\n_c = Login;\nexport default login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Icon","React","useState","useDispatch","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","rememberMe","setRememberMe","Dispatch","Navigate","useNavigate","response","fetch","method","headers","body","JSON","stringify","ok","data","json","token","dispatch","sessionStorage","setItem","localStorage","navigate","error","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","for","id","type","value","onChange","event","target","href","_c","login","$RefreshReg$"],"sources":["/Users/mathieucocu/Desktop/formation front end/projet 11/ArgentBank-website-main/reactpart/src/components/login/index.jsx"],"sourcesContent":["import Icon from './circle-user-solid.svg';\nimport './style.css';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst Login = () => {\n\n    // TODO : Faire le fetch pour récupérer le token à la connexion\n    // TODO : Sauvbegarder le token dans redux avec dispatch\n    //fetch('http://locahost:3001/api/v1/user/profile', {\n          //  method: 'GET',\n            //headers: {...}\n\n        //})\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [rememberMe, setRememberMe] = useState(false);\n\n   \n    const Dispatch = useDispatch();\n    const Navigate = useNavigate(); \n     \n    const response = fetch(\"http://localhost:3001/api/v1/user/login\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({email, password}),\n        });\n        if (response.ok) {\n            const data = response.json();    \n            const token = data.body.token;\n            dispatch((token));\n            sessionStorage.setItem(\"token\", token);\n            if (rememberMe) {\n                localStorage.setItem(\"token\", token);\n            }\n            navigate('/user');\n        } else {\n            const error = \"your email or password is invalid\"\n                dispatch((error));\n        }   \n    \n    return (\n        <section className=\"main-login\">\n            <div className=\"sign-in-content\">\n                <img src={Icon} alt=\"user icon\" className='usericon'/>\n                <h1>Sign In</h1>\n                <form>\n                    <div className=\"input-wrapper\">\n                        <label for=\"username\">Username</label>\n                        <input id='username' type='text' value={email} onChange={(event) => setEmail(event.target.value)} />\n                    </div>\n                    <div className=\"input-wrapper\">\n                        <label for=\"password\">Password</label>\n                        <input id='password' type='password' value={password} onChange={(event) => setPassword(event.target.value)} />\n                    </div>\n                    <div className=\"input-remember\">\n                        <label for=\"remember-me\">Remember me</label>\n                        <input id='remember-me' type='checkbox' value={rememberMe} onChange={(event) => setRememberMe(event.target.value)} />\n                    </div>\n                    <a href=\"./user\" className=\"sign-in-button\">Sign In</a>\n                </form>\n            </div>\n        </section>\n    );\n};\n\nexport default login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}