{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n\n// Fonction pour récupérer le token depuis localStorage\nconst getTokenFromLocalStorage = () => {\n  return localStorage.getItem('token') || null;\n};\n\n// Fonction pour récupérer les informations de l'utilisateur depuis localStorage\nconst getUserInfoFromLocalStorage = () => {\n  const token = localStorage.getItem('token');\n  // Tu pourrais également stocker d'autres informations dans localStorage si nécessaire\n  return {\n    firstName: localStorage.getItem('firstName') || '',\n    lastName: localStorage.getItem('lastName') || '',\n    email: localStorage.getItem('email') || '',\n    token: getTokenFromLocalStorage(token)\n  };\n};\nexport const loginSlice = createSlice({\n  name: \"login\",\n  initialState: {\n    isConnected: !!getTokenFromLocalStorage(),\n    token: getTokenFromLocalStorage(),\n    firstName: getUserInfoFromLocalStorage().firstName,\n    lastName: getUserInfoFromLocalStorage().lastName,\n    email: getUserInfoFromLocalStorage().email,\n    userName: \"\"\n  },\n  reducers: {\n    setUserInfos: (state, action) => {\n      state.firstName = action.payload.firstName;\n      state.lastName = action.payload.lastName;\n      state.email = action.payload.email;\n      state.userName = action.payload.userName;\n      state.isConnected = true;\n\n      // Stocker les informations utilisateur dans localStorage\n      localStorage.setItem('firstName', action.payload.firstName);\n      localStorage.setItem('lastName', action.payload.lastName);\n      localStorage.setItem('email', action.payload.email);\n    },\n    setUserAuth: (state, action) => {\n      state.email = action.payload.email;\n      state.password = action.payload.password;\n      state.token = action.payload.token;\n      state.isConnected = true;\n\n      // Stocker le token dans localStorage\n      localStorage.setItem('token', action.payload.token);\n      localStorage.setItem('firstName', action.payload.firstName || '');\n      localStorage.setItem('lastName', action.payload.lastName || '');\n      localStorage.setItem('email', action.payload.email || '');\n    },\n    storeToken: (state, action) => {\n      state.token = action.payload;\n      state.isConnected = true; // Assure que isConnected est mis à jour\n\n      // Stocker le token dans localStorage\n      localStorage.setItem('token', action.payload);\n    },\n    logout: state => {\n      state.isConnected = false;\n      state.email = \"\";\n      state.password = \"\";\n      state.firstName = \"\";\n      state.lastName = \"\";\n      state.token = null;\n\n      // Supprimer le token et les informations utilisateur de localStorage\n      localStorage.removeItem('token');\n      localStorage.removeItem('firstName');\n      localStorage.removeItem('lastName');\n      localStorage.removeItem('email');\n    }\n  }\n});\nexport const {\n  setUserInfos,\n  setUserAuth,\n  storeToken,\n  logout\n} = loginSlice.actions;\nexport default loginSlice.reducer;","map":{"version":3,"names":["createSlice","getTokenFromLocalStorage","localStorage","getItem","getUserInfoFromLocalStorage","token","firstName","lastName","email","loginSlice","name","initialState","isConnected","userName","reducers","setUserInfos","state","action","payload","setItem","setUserAuth","password","storeToken","logout","removeItem","actions","reducer"],"sources":["/Users/mathieucocu/Desktop/formation front end/projet 10/p11- bon argentbank/frontend/src/feature/login.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n// Fonction pour récupérer le token depuis localStorage\nconst getTokenFromLocalStorage = () => {\n    return localStorage.getItem('token') || null;\n};\n\n// Fonction pour récupérer les informations de l'utilisateur depuis localStorage\nconst getUserInfoFromLocalStorage = () => {\n    const token = localStorage.getItem('token');\n    // Tu pourrais également stocker d'autres informations dans localStorage si nécessaire\n    return {\n        firstName: localStorage.getItem('firstName') || '',\n        lastName: localStorage.getItem('lastName') || '',\n        email: localStorage.getItem('email') || '',\n        token: getTokenFromLocalStorage(token),\n    };\n};\n\nexport const loginSlice = createSlice({\n    name: \"login\",\n    initialState: {\n        isConnected: !!getTokenFromLocalStorage(),\n        token: getTokenFromLocalStorage(),\n        firstName: getUserInfoFromLocalStorage().firstName,\n        lastName: getUserInfoFromLocalStorage().lastName,\n        email: getUserInfoFromLocalStorage().email,\n        userName: \"\",\n    },\n    reducers: {\n        setUserInfos: (state, action) => {\n            state.firstName = action.payload.firstName;\n            state.lastName = action.payload.lastName;\n            state.email = action.payload.email;\n            state.userName = action.payload.userName;\n            state.isConnected = true;\n\n            // Stocker les informations utilisateur dans localStorage\n            localStorage.setItem('firstName', action.payload.firstName);\n            localStorage.setItem('lastName', action.payload.lastName);\n            localStorage.setItem('email', action.payload.email);\n        },\n        setUserAuth: (state, action) => {\n            state.email = action.payload.email;\n            state.password = action.payload.password;\n            state.token = action.payload.token;\n            state.isConnected = true;\n\n            // Stocker le token dans localStorage\n            localStorage.setItem('token', action.payload.token);\n            localStorage.setItem('firstName', action.payload.firstName || '');\n            localStorage.setItem('lastName', action.payload.lastName || '');\n            localStorage.setItem('email', action.payload.email || '');\n        },\n        storeToken: (state, action) => {\n            state.token = action.payload;\n            state.isConnected = true; // Assure que isConnected est mis à jour\n\n            // Stocker le token dans localStorage\n            localStorage.setItem('token', action.payload);\n        },\n        logout: (state) => {\n            state.isConnected = false;\n            state.email = \"\";\n            state.password = \"\";\n            state.firstName = \"\";\n            state.lastName = \"\";\n            state.token = null;\n\n            // Supprimer le token et les informations utilisateur de localStorage\n            localStorage.removeItem('token');\n            localStorage.removeItem('firstName');\n            localStorage.removeItem('lastName');\n            localStorage.removeItem('email');\n        },\n    },\n});\n\nexport const { setUserInfos, setUserAuth, storeToken, logout } = loginSlice.actions;\nexport default loginSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}