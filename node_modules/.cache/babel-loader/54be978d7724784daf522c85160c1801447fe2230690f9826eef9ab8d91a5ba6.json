{"ast":null,"code":"var _jsxFileName = \"/Users/mathieucocu/Desktop/formation front end/projet 10/p11- bon argentbank/frontend/src/components/login/index.jsx\",\n  _s = $RefreshSig$();\nimport Icon from './circle-user-solid.svg';\nimport './style.css';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { setUserAuth, setUserInfos } from '../../feature/login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const resetForm = () => {\n    setEmail('');\n    setPassword('');\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      console.log(\"Submitting login form...\");\n      const response = await fetch(\"http://localhost:3001/api/v1/user/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        const token = data.body.token;\n        console.log(\"Login successful, received token:\", token);\n        dispatch(storeToken(token));\n\n        // Call API pour obtenir les données du profil de l'utilisateur\n        const profilInfos = await fetch('http://localhost:3001/api/v1/user/profile', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}` // Inclure le token dans les en-têtes\n          }\n        });\n        if (!profilInfos.ok) {\n          throw new Error('Failed to fetch user profile data');\n        }\n        // Extraire les données du profil de la réponse\n        const profilData = await profilInfos.json();\n        console.log(\"User profile data retrieved:\", profilData);\n\n        // Dispatch des informations d'authentification\n        dispatch(setUserAuth({\n          email,\n          token\n        }));\n        console.log(\"Dispatched setUserAuth with:\", {\n          email,\n          token\n        });\n\n        // Dispatch des informations utilisateur (firstName au lieu de userName)\n        dispatch(setUserInfos({\n          email: profilData.body.email,\n          firstName: profilData.body.firstName,\n          // Utilisation du firstName\n          lastName: profilData.body.lastName\n        }));\n        console.log(\"Dispatched setUserInfos with:\", {\n          email: profilData.body.email,\n          firstName: profilData.body.firstName,\n          lastName: profilData.body.lastName\n        });\n        navigate('/user');\n        resetForm();\n      } else {\n        const errorData = await response.json();\n        setError(errorData.message || \"Une erreur est survenue. Veuillez réessayer.\");\n        console.error(\"Login error:\", errorData);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      setError(\"Une erreur réseau est survenue. Veuillez vérifier votre connexion.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"main-login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-in-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Icon,\n        alt: \"user icon\",\n        className: \"usericon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"form-username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"form-username\",\n            type: \"email\",\n            value: email,\n            onChange: event => setEmail(event.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            value: password,\n            onChange: event => setPassword(event.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-remember\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"remember-me\",\n            children: \"Remember me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"remember-me\",\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"sign-in-button\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"AR4NPp2BQevf5Ix3lZW1AAf9OFs=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Icon","React","useState","useDispatch","useNavigate","setUserAuth","setUserInfos","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","dispatch","navigate","resetForm","handleSubmit","event","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","ok","data","json","token","storeToken","profilInfos","Authorization","Error","profilData","firstName","lastName","errorData","message","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/mathieucocu/Desktop/formation front end/projet 10/p11- bon argentbank/frontend/src/components/login/index.jsx"],"sourcesContent":["import Icon from './circle-user-solid.svg';\nimport './style.css';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { setUserAuth, setUserInfos } from '../../feature/login';\n\nconst Login = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState(null);\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const resetForm = () => {\n        setEmail('');\n        setPassword('');\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            console.log(\"Submitting login form...\");\n    \n            const response = await fetch(\"http://localhost:3001/api/v1/user/login\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ email, password }),\n            });\n    \n            if (response.ok) {\n                const data = await response.json();\n                const token = data.body.token;\n    \n                console.log(\"Login successful, received token:\", token);\n                \n                dispatch(storeToken(token))\n                \n                // Call API pour obtenir les données du profil de l'utilisateur\n                const profilInfos = await fetch('http://localhost:3001/api/v1/user/profile', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${token}`, // Inclure le token dans les en-têtes\n                    },\n                });\n    \n                if (!profilInfos.ok) {\n                    throw new Error('Failed to fetch user profile data');\n                }\n                // Extraire les données du profil de la réponse\n                const profilData = await profilInfos.json();\n                console.log(\"User profile data retrieved:\", profilData);\n    \n                // Dispatch des informations d'authentification\n                dispatch(setUserAuth({ email, token }));\n                console.log(\"Dispatched setUserAuth with:\", { email, token });\n                \n                // Dispatch des informations utilisateur (firstName au lieu de userName)\n                dispatch(setUserInfos({\n                    email: profilData.body.email,\n                    firstName: profilData.body.firstName, // Utilisation du firstName\n                    lastName: profilData.body.lastName,\n                }));\n                console.log(\"Dispatched setUserInfos with:\", {\n                    email: profilData.body.email,\n                    firstName: profilData.body.firstName,\n                    lastName: profilData.body.lastName,\n                });\n    \n                navigate('/user');\n                resetForm();\n            } else {\n                const errorData = await response.json();\n                setError(errorData.message || \"Une erreur est survenue. Veuillez réessayer.\");\n                console.error(\"Login error:\", errorData);\n            }\n        } catch (error) {\n            console.error(\"Error fetching data:\", error);\n            setError(\"Une erreur réseau est survenue. Veuillez vérifier votre connexion.\");\n        }\n    };\n    \n    return (\n        <section className=\"main-login\">\n            <div className=\"sign-in-content\">\n                <img src={Icon} alt=\"user icon\" className='usericon'/>\n                <h1>Sign In</h1>\n                <form onSubmit={handleSubmit}>\n                    <div className=\"input-wrapper\">\n                        <label htmlFor=\"form-username\">Username</label>\n                        <input id='form-username' \n                            type='email' \n                            value={email} \n                            onChange={(event) => setEmail(event.target.value)} \n                            required \n                        />\n                    </div>\n                    <div className=\"input-wrapper\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input id='password' \n                            type='password' \n                            value={password} \n                            onChange={(event) => setPassword(event.target.value)} \n                            required \n                        />\n                    </div>\n                    <div className=\"input-remember\">      \n                        <label htmlFor=\"remember-me\">Remember me</label>\n                        <input id='remember-me' \n                            type='checkbox' \n                        />\n                    </div>\n                    <button type=\"submit\" className=\"sign-in-button\">Sign In</button>\n                    {error && <p className=\"error-message\">{error}</p>}\n                </form>\n            </div>\n        </section>\n    );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}