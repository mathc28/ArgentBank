{"ast":null,"code":"var _jsxFileName = \"/Users/mathieucocu/Desktop/formation front end/projet 11/ArgentBank-website-main/react/src/pages/user/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Greetings from '../../components/greetings';\nimport Accounts from '../../components/accounts';\nimport { setUserInfos } from '../../feature/user';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = () => {\n  _s();\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const [isLoading, setIsLoding] = useState(false);\n  useEffect(() => {\n\n    // Récupérer le token (redux)\n\n    /*\n    fetch('http://locahost:3001/api/v1/user/profile', {\n        method: 'GET',\n        headers: {...}\n     })\n    .then(response => response.json())\n    .then(data => {\n        dispatch(setUserInfos({\n            firstname: data.firstname,\n            lastname: data.lastname,\n        }));\n        setIsLoding(false)\n    })\n    */\n\n    // Si ca ce passe pas bien => Soit affichage d'une erreur soit redirection vers /connexion\n  }, []);\n\n  // TODO : 1er truc à faire, on récupère le token de redux, et on tente un fetch pour récupérer les infos du user => on les stocks dans redux\n  // Si le résultat est OK, alors on affiche la page avec setIsLoading(false)\n  // Si le résultat est KO, alors on redirige vers la page connexion\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Chargement en cours..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"backgroundcolor\",\n    children: [user.token, /*#__PURE__*/_jsxDEV(Greetings, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Accounts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(User, \"TiYFGm5uOKXRqa5nR/MxDQhl0po=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","Greetings","Accounts","setUserInfos","jsxDEV","_jsxDEV","User","_s","dispatch","user","state","isLoading","setIsLoding","children","fileName","_jsxFileName","lineNumber","columnNumber","className","token","_c","$RefreshReg$"],"sources":["/Users/mathieucocu/Desktop/formation front end/projet 11/ArgentBank-website-main/react/src/pages/user/index.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\n\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport Greetings from '../../components/greetings';\nimport Accounts from '../../components/accounts';\n\nimport {setUserInfos} from '../../feature/user'\n\nimport './style.css';\n\n\nconst User = () => {\n\n    const dispatch = useDispatch();\n\n    const user = useSelector(state => state.user);\n\n    const [isLoading, setIsLoding] = useState(false);\n\n    useEffect(() => {\n\n        // Récupérer le token (redux)\n\n        /*\n        fetch('http://locahost:3001/api/v1/user/profile', {\n            method: 'GET',\n            headers: {...}\n\n        })\n        .then(response => response.json())\n        .then(data => {\n            dispatch(setUserInfos({\n                firstname: data.firstname,\n                lastname: data.lastname,\n            }));\n            setIsLoding(false)\n        })\n        */\n\n        // Si ca ce passe pas bien => Soit affichage d'une erreur soit redirection vers /connexion\n\n    }, [])\n\n\n    // TODO : 1er truc à faire, on récupère le token de redux, et on tente un fetch pour récupérer les infos du user => on les stocks dans redux\n    // Si le résultat est OK, alors on affiche la page avec setIsLoading(false)\n    // Si le résultat est KO, alors on redirige vers la page connexion\n\n    if(isLoading) {\n        return (<p>Chargement en cours..</p>)\n    }\n\n    return (\n        <div className='backgroundcolor'>\n\n            {user.token}\n         <Greetings />   \n         <Accounts />\n        </div>\n    );\n};\n\nexport default User;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAEhD,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AAEpD,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,QAAQ,MAAM,2BAA2B;AAEhD,SAAQC,YAAY,QAAO,oBAAoB;AAE/C,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEf,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,IAAI,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACD,IAAI,CAAC;EAE7C,MAAM,CAACE,SAAS,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEhDD,SAAS,CAAC,MAAM;;IAEZ;;IAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAGQ;EAAA,CAEH,EAAE,EAAE,CAAC;;EAGN;EACA;EACA;;EAEA,IAAGc,SAAS,EAAE;IACV,oBAAQN,OAAA;MAAAQ,QAAA,EAAG;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACxC;EAEA,oBACIZ,OAAA;IAAKa,SAAS,EAAC,iBAAiB;IAAAL,QAAA,GAE3BJ,IAAI,CAACU,KAAK,eACdd,OAAA,CAACJ,SAAS;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACbZ,OAAA,CAACH,QAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACV,EAAA,CAjDID,IAAI;EAAA,QAEWP,WAAW,EAEfC,WAAW;AAAA;AAAAoB,EAAA,GAJtBd,IAAI;AAmDV,eAAeA,IAAI;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}