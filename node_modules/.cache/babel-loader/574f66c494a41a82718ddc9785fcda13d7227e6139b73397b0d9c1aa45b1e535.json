{"ast":null,"code":"var _jsxFileName = \"/Users/mathieucocu/Desktop/formation front end/projet 11/ArgentBank-website-main/reactpart/src/pages/user/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Greetings from '../../components/greetings';\nimport Accounts from '../../components/accounts';\nimport { setUserInfos } from '../../feature/user';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoding] = useState(false);\n  useEffect(() => {\n    fetch('http://locahost:3001/api/v1/user/profile', {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify()\n    });\n  }).then(response => response.json());\n\n  // TODO : 1er truc à faire, on récupère le token de redux, et on tente un fetch pour récupérer les infos du user => on les stocks dans redux\n  // Si le résultat est OK, alors on affiche la page avec setIsLoading(false)\n  // Si le résultat est KO, alors on redirige vers la page connexion\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Chargement en cours..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"backgroundcolor\",\n    children: [/*#__PURE__*/_jsxDEV(Greetings, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Accounts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(User, \"0q6QQef3Rt6OjFkAzVnrrZlXDJ0=\", false, function () {\n  return [useDispatch];\n});\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","Greetings","Accounts","setUserInfos","jsxDEV","_jsxDEV","User","_s","dispatch","isLoading","setIsLoding","fetch","method","headers","body","JSON","stringify","then","response","json","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/mathieucocu/Desktop/formation front end/projet 11/ArgentBank-website-main/reactpart/src/pages/user/index.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\n\nimport {useDispatch} from 'react-redux';\n\nimport Greetings from '../../components/greetings';\nimport Accounts from '../../components/accounts';\n\nimport {setUserInfos} from '../../feature/user'\n\nimport './style.css';\n\n\nconst User = () => {\n\n    const dispatch = useDispatch();\n\n    const [isLoading, setIsLoding] = useState(false);\n\n    useEffect(() => {\n\n        fetch('http://locahost:3001/api/v1/user/profile', {\n            method: 'GET',\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(),\n            });\n        })\n        .then(response => response.json())\n       \n\n\n\n    // TODO : 1er truc à faire, on récupère le token de redux, et on tente un fetch pour récupérer les infos du user => on les stocks dans redux\n    // Si le résultat est OK, alors on affiche la page avec setIsLoading(false)\n    // Si le résultat est KO, alors on redirige vers la page connexion\n\n    if(isLoading) {\n        return (<p>Chargement en cours..</p>)\n    }\n\n    return (\n        <div className='backgroundcolor'>\n         <Greetings />   \n         <Accounts />\n        </div>\n    );\n};\n\nexport default User;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAEhD,SAAQC,WAAW,QAAO,aAAa;AAEvC,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,QAAQ,MAAM,2BAA2B;AAEhD,SAAQC,YAAY,QAAO,oBAAoB;AAE/C,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEf,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACS,SAAS,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEhDD,SAAS,CAAC,MAAM;IAEZa,KAAK,CAAC,0CAA0C,EAAE;MAC9CC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;;EAKtC;EACA;EACA;;EAEA,IAAGV,SAAS,EAAE;IACV,oBAAQJ,OAAA;MAAAe,QAAA,EAAG;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACxC;EAEA,oBACInB,OAAA;IAAKoB,SAAS,EAAC,iBAAiB;IAAAL,QAAA,gBAC/Bf,OAAA,CAACJ,SAAS;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACbnB,OAAA,CAACH,QAAQ;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACjB,EAAA,CAnCID,IAAI;EAAA,QAEWN,WAAW;AAAA;AAAA0B,EAAA,GAF1BpB,IAAI;AAqCV,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}